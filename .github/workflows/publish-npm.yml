name: Publish NPM Package

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 0.4.66)'
        required: true
        type: string

jobs:
  publish-npm:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        registry-url: 'https://registry.npmjs.org'

    - name: Clear npm cache
      run: npm cache clean --force

    - name: Install dependencies
      run: npm install

    - name: Compile TypeScript
      run: npm run compile

    - name: Prepare NPM package structure
      run: |
        # Create npm package directory
        mkdir -p npm-package

        # Copy core files needed for NPM package
        cp -r out/* npm-package/

        # Copy package files
        cp package.json npm-package/
        cp README.md npm-package/
        cp CHANGELOG.md npm-package/
        cp LICENSE npm-package/

        # Create bin directory and CLI wrapper
        mkdir -p npm-package/bin

        # Create CLI wrapper script
        cat > npm-package/bin/devmirror.js << 'EOF'
        #!/usr/bin/env node
        require('../cli.js');
        EOF

        chmod +x npm-package/bin/devmirror.js

    - name: Update NPM package.json
      run: |
        cd npm-package

        # Get version from input or release
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          VERSION="${{ github.event.inputs.version }}"
        else
          VERSION="${{ github.event.release.tag_name }}"
          VERSION="${VERSION#v}"
        fi

        # Update package.json for NPM
        cat > package.json << EOF
        {
          "name": "devmirror",
          "version": "$VERSION",
          "description": "Capture browser console output using Chrome DevTools Protocol",
          "main": "cli.js",
          "bin": {
            "devmirror": "./bin/devmirror.js",
            "devmirror-cli": "./bin/devmirror.js"
          },
          "scripts": {
            "test": "echo \"No tests yet\""
          },
          "keywords": [
            "console",
            "logging",
            "debugging",
            "chrome-devtools",
            "cdp",
            "adobe-cef",
            "browser-console",
            "devtools-protocol",
            "deprecation-warnings",
            "shadow-dom"
          ],
          "author": "IVG Design",
          "license": "MIT",
          "dependencies": {
            "puppeteer-core": "^21.11.0",
            "ws": "^8.18.3",
            "open": "^10.1.0"
          },
          "engines": {
            "node": ">=18.0.0"
          },
          "repository": {
            "type": "git",
            "url": "git+https://github.com/ivg-design/devMirror.git"
          },
          "homepage": "https://github.com/ivg-design/devMirror",
          "bugs": {
            "url": "https://github.com/ivg-design/devMirror/issues"
          }
        }
        EOF

    - name: Publish to NPM
      run: |
        cd npm-package
        npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Update repository with NPM package info
      run: |
        # This step updates the main repo to show the package was published
        # The NPM_TOKEN remains private, but we can show the package exists
        echo "NPM package published successfully" > .npm-publish-success

        # Get version
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          VERSION="${{ github.event.inputs.version }}"
        else
          VERSION="${{ github.event.release.tag_name }}"
          VERSION="${VERSION#v}"
        fi

        echo "Published version: $VERSION" >> .npm-publish-success
        echo "Package URL: https://www.npmjs.com/package/devmirror" >> .npm-publish-success

    - name: Comment on Release (if from release)
      if: github.event_name == 'release'
      uses: actions/github-script@v7
      with:
        script: |
          const version = context.payload.release.tag_name.replace('v', '');

          github.rest.issues.createComment({
            issue_number: context.payload.release.id,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `ðŸŽ‰ **NPM Package Published!**

            ðŸ“¦ **devmirror@${version}** is now available on NPM

            **Install:**
            \`\`\`bash
            npm install -g devmirror
            # or
            npx devmirror
            \`\`\`

            **NPM Page:** https://www.npmjs.com/package/devmirror

            ---
            *This package includes the new deprecation warnings capture feature for Shadow DOM and other browser warnings.*`
          });

    - name: Create deployment status
      uses: actions/github-script@v7
      with:
        script: |
          const version = '${{ github.event_name }}' === 'workflow_dispatch'
            ? '${{ github.event.inputs.version }}'
            : context.payload.release.tag_name.replace('v', '');

          github.rest.repos.createDeploymentStatus({
            owner: context.repo.owner,
            repo: context.repo.repo,
            deployment_id: context.sha,
            state: 'success',
            environment: 'npm',
            description: `devmirror@${version} published to NPM`,
            target_url: 'https://www.npmjs.com/package/devmirror'
          });